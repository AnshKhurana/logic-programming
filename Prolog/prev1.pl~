%% Prolog code for Magic square

%% In Prolog we can represent a n x n matrix as a list of n lists each with n integers. For example the first matrix can be expressed as

%%      Matrix = [[6,7,2],[1,5,9],[8,3,4]]



%% We will call a n x n   integer matrix M a quasi magic square with magic sum  S if each of its rows and each of its columns sum to S, but the principal diagonals need not sum to S.  An example of a quasi magic square which is not a magic square is  (in prolog notation)

%%             [[1, 6, 8], [5, 7, 3], [9, 2, 4]]

%% where each row and column sums to 15, but the diagonals do not.

%% There are two main parts in this quiz.  In the first part you will  only CHECK if a given matrix has some properties of a magic square. 

%% You can assume these predicates will always be called  with first argument instantiated to a n x n  integer matrix. No need to check if input is correct. Input will always have n lists each with n integers for n >= 1.



%% 1. Implement a predicate allRowsSameSum(Matrix, Sum) which succeds only if all rows have the same sum. In this case it gives this Sum as output. Sample calls below.
%% ?- allRowsSameSum([[6,7,2],[1,9,5],[8,3,4]],Sum).
%% Sum = 15.


allRowsSameSum(Matrix, Sum) :- , Rowsums = [Sum, Sum, Sum].
